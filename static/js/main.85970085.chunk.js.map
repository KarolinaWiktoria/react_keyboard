{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAKMA,E,4MACJC,MAAQ,CACNC,WAAY,2B,EAWdC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,Q,uDAT5B,WACEC,SAASC,iBAAiB,QAASC,KAAKN,e,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,e,oBAO7C,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BF,KAAKR,MAAMC,mB,GApB9BU,aA0BHZ,I,MCzBfa,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.85970085.chunk.js","sourcesContent":["// eslint-disable-next-line\nimport { Component } from 'react';\n// eslint-disable-next-line\ninterface Props {}\n\nclass App extends Component<Props, { pressedKey: string }> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// eslint-disable-next-line\nimport ReactDOM from 'react-dom';\nimport App from './App'; // Import the App component\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}